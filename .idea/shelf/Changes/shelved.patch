Index: src/Lesson1/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/Lesson1/Main.java b/src/Lesson1/Main.java
new file mode 100644
--- /dev/null	(date 1662477556473)
+++ b/src/Lesson1/Main.java	(date 1662477556473)
@@ -0,0 +1,17 @@
+package Lesson1;
+
+public class Main {
+    public static void main(String[] args) {
+        People[] people = new People[4];
+        people[0] = new People("A",45,63,195);
+        people[1] = new People("B",40,68,210);
+        people[2] = new People("C",37,53,220);
+        people[3] = new People("D",48,69,201);
+        Team team = new Team("1",people);
+
+        Course course = new Course(50,75,200);
+        String result = course.doIt(team);
+        System.out.println(result);
+
+    }
+}
Index: src/Lesson1/Team.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/Lesson1/Team.java b/src/Lesson1/Team.java
new file mode 100644
--- /dev/null	(date 1662475495041)
+++ b/src/Lesson1/Team.java	(date 1662475495041)
@@ -0,0 +1,15 @@
+package Lesson1;
+
+public class Team {
+    private String name;
+    private People[] peoples;
+
+    public Team(String name,People[] peoples) {
+        this.name = name;
+        this.peoples = peoples;
+    }
+
+    public String getName () { return name; }
+
+    public People[] getPeoples() { return peoples; }
+}
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1662466576842)
+++ b/.gitignore	(date 1662466576842)
@@ -0,0 +1,29 @@
+### IntelliJ IDEA ###
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/Main.java b/src/Main.java
new file mode 100644
--- /dev/null	(date 1662466576981)
+++ b/src/Main.java	(date 1662466576981)
@@ -0,0 +1,5 @@
+public class Main {
+    public static void main(String[] args) {
+        System.out.println("Hello world!");
+    }
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1662466583345)
+++ b/.idea/misc.xml	(date 1662466583345)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" default="true" project-jdk-name="openjdk-18" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1662466583364)
+++ b/.idea/vcs.xml	(date 1662466583364)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1662466583301)
+++ b/.idea/modules.xml	(date 1662466583301)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/JavaCore.iml" filepath="$PROJECT_DIR$/JavaCore.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1662477206294)
+++ b/.idea/workspace.xml	(date 1662477206294)
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="b11cdf2f-0345-4cd3-977f-d18af7de6da9" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/JavaCore.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Lesson1/Course.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Lesson1/Main.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Lesson1/People.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Lesson1/Team.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectId" id="2EOVNQaDuxWn9UMYduK0GRrrk4a" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
+  <component name="ProjectViewState">
+    <option name="autoscrollToSource" value="true" />
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"
+  }
+}]]></component>
+  <component name="RunManager">
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Lesson1.Main" />
+      <module name="JavaCore" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="Lesson1.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Main" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="b11cdf2f-0345-4cd3-977f-d18af7de6da9" name="Changes" comment="" />
+      <created>1662466580389</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1662466580389</updated>
+    </task>
+    <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: JavaCore.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JavaCore.iml b/JavaCore.iml
new file mode 100644
--- /dev/null	(date 1662466583253)
+++ b/JavaCore.iml	(date 1662466583253)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/Lesson1/People.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/Lesson1/People.java b/src/Lesson1/People.java
new file mode 100644
--- /dev/null	(date 1662475584974)
+++ b/src/Lesson1/People.java	(date 1662475584974)
@@ -0,0 +1,21 @@
+package Lesson1;
+
+public class People {
+        private String name;
+        private int canRun1000m;
+        private int canSwimming1000m;
+        private int canHighJump;
+
+        public People(String name, int canRun1000m, int canSwimming1000m, int canHighJump) {
+            this.name = name;
+            this.canRun1000m = canRun1000m;
+            this.canSwimming1000m = canSwimming1000m;
+            this.canHighJump = canHighJump;
+        }
+        public String getName() { return name; }
+        public int getCanRun1000m() { return canRun1000m; }
+        public int getCanSwimming1000m() { return canSwimming1000m; }
+        public int getCanHighJump() { return canHighJump; }
+    }
+
+
Index: src/Lesson1/Course.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/src/Lesson1/Course.java b/src/Lesson1/Course.java
new file mode 100644
--- /dev/null	(date 1662477068142)
+++ b/src/Lesson1/Course.java	(date 1662477068142)
@@ -0,0 +1,43 @@
+package Lesson1;
+
+public class Course {
+    String result;
+    private int run1000m;
+    private int swimming1000m;
+    private int highJump;
+
+    public Course(int run1000m, int swimming1000m, int highJump) {
+        this.run1000m = run1000m;
+        this.swimming1000m = swimming1000m;
+        this.highJump = highJump;
+    }
+
+    public String doIt(Team team){
+        result = "Команда " + team.getName() + " ";
+        for (People people: team.getPeoples()){
+            result += "Имя: " + people.getName() + " ";
+            int speed = people.getCanRun1000m();
+            int time = people.getCanSwimming1000m();
+            int high = people.getCanHighJump();
+            testRun1000m(speed);
+            testSwimming1000m(time);
+            testHighJump(high);
+        }
+
+        return result;
+    }
+
+    private void testRun1000m(int speed){
+        if (speed<run1000m) result = result + "Прошёл ";
+        else result += "Выбыл ";
+    }
+
+    private void testSwimming1000m(int time){
+        if (time<swimming1000m) result = result + "Прошёл ";
+        else result += "Выбыл ";
+    }
+    private void testHighJump(int high){
+        if (high>highJump) result = result + "Прошёл ";
+        else result += "Выбыл ";
+    }
+}
